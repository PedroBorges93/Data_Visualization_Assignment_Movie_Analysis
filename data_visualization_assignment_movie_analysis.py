# -*- coding: utf-8 -*-
"""Data_Visualization_Assignment_Movie_Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZgPd6SJeRWtmgM7sBPAAbpC9fItCIOMu

###This is our Data Visualization Assignment made by Cristiano Porto, Sukhinderpal Mann and Pedro Pereira.

###We would also like to answer a few questions stated in the assignment before we go through the code and visualizations.



###*   How was the work split among the team members?
###*   How much time was roughly spent to develop the application?
###*   What aspects did take most time? 
 





###The work was split in a way that all team members were able to give a contribution. The Data Explanation was done by Sukhinderpal, where he was able to answer the questions about movies and actors. The Data Exploration, Data Cleaning and Data Preparation part were done by Pedro and Cristiano. 12 days were the time necessary to complete the application and the interaction part was the most demanding but also cleaning the data was hard because we needed to create new columns, delete missing values and use only the necessary part in order to visualize.

### First of all we are importing the libraries necessary to begin the visualizations.
"""

import altair as alt
from vega_datasets import data
import pandas as pd
import requests
import io
import numpy as np
import matplotlib.pyplot as plt
import random
import seaborn as sns
import matplotlib.pyplot as plt

"""### The code below is to import the csv file that can be found on the zip folder submitted on Moodle."""

from google.colab import files
uploaded = files.upload()

"""### In this part, we are importing our dataset and setting the necessary variables in order to start the visualization."""

dataset=pd.read_csv(io.BytesIO(uploaded['tmdb_5000_movies (2) (1).csv']))

movies=dataset

"""### The 'profit' column was created by subtracting the 'revenue' by 'budget' columns to see further visualizations.  """

movies['profit']=movies.revenue-movies.budget

"""### The 'timexbudget' column was created by dividing the budget for their runtime. """

movies['timexbudget']=movies.budget/movies.runtime

"""### There are two graphics below and they can give us some insights about how movies vary when comparing the Budget x Revenue. We can clearly see that most movies have budget below two hundred thousand dollars and only few are above the average, and most movies had Revenue ranging from zero to eight hundred thousand dollars. In the second visualization, we are aiming to show how these movies were rated based on their Revenue. As we can see below, most movies were rated from 0 to 6 and their budget were also between zero and eight hundred thousand dollars. 

####The graphs below are interactive you can make a selector area to see the relatioship betwen the graphs and each point represents a different movie

#####Will the movie that hag spent more money is the movie with more votes?
"""

interval = alt.selection_interval(encodings=['x','y'])

chart=alt.Chart(movies).mark_point().encode(
x='revenue',
y='budget',
color=alt.condition(interval,'vote_average', alt.value('lightgray')),
    tooltip='original_title',
   
).properties(
selection=interval
)

chart | chart.encode(x='revenue',y='vote_count')

"""### In the two visualizations below we are aiming to show how genres of movies vary according to their revenue, and according to each genre how many count of records can be found. For the first analysis, the majority of movies had revenue below eight hundred thousand dollars and the genre which had the most revenue was 'Action'. Now, when we look at the second visualization, we can see that the genre which had the most count of records was 'Drama', followed by 'Comedy' and 'Action'.

####You can make an selector area to navigate on the first graph to see in the second one how many movies are in this area by genre, each point on the first graph is a different movie
"""

chart = alt.Chart(movies).mark_point().encode(
    y='genres1',
    x='revenue',
   color=alt.condition(interval,'genres1', alt.value('lightgray')),
    tooltip='original_title',
    
).properties(
    selection=interval
)

hist = alt.Chart(movies).mark_bar().encode(
    y='genres1',
    x='count()',
 color='genres1'
).transform_filter(
    interval
  )
alt.vconcat(chart, hist)

"""### This visualization is quite interesting due to its possibility of changing the 'Filter_genres1' and choosing the desired genre for analysing the data. Here we can see that this plot aims to visualize the popularity of movies according to their budget. 

####You can zoom in and zoom out to get more information on this graphs 

#####Which genre  has more revenue?
"""

select_box = alt.binding_select(options=list(movies['genres1'].unique()))
selection = alt.selection_single(name='Filter', fields=['genres1'], bind=select_box)


alt.Chart(movies).mark_circle().encode(
    x='budget',
    y='popularity',
    color='revenue',
    tooltip='original_title'
).add_selection(
    selection
).transform_filter(
    selection
).interactive()

"""### The next visualization gives us some good insights about the popularity of the movies and their budget according to 'Production of Movies', which is the name of the company responsible to make the movies and it is also possible to choose by clicking on the 'Filter_production_companies1' and select the desired company.  

#####Which genre are more produced by the Production Company?
"""

select_box = alt.binding_select(options=list(movies['production_companies1'].unique()))
selection = alt.selection_single(name='Filter', fields=['production_companies1'], bind=select_box)


alt.Chart(movies).mark_point().encode(
    x='budget',
    y='popularity',
    color='genres1',
    tooltip='original_title'
).add_selection(
    selection
).transform_filter(
    selection
)

"""### For the analysis below, we can see the revenue of movies according to their budget and runtime (this stands for the duration in minutes of each movie)the colour getting dark by the longest movie. There is a possibility to change the genre by selecting the 'Filter_genres1'. """

select_box = alt.binding_select(options=list(movies['genres1'].unique()))
selection = alt.selection_single(name='Filter', fields=['genres1'], bind=select_box)

alt.Chart(movies).mark_circle().encode(
y='budget',
x='revenue',
color='runtime',
    tooltip='original_title'

).add_selection(
    selection
).transform_filter(
    selection
)

"""### The next visualization, we can see the profit of each movie according to the vote average. It is clearly seen that most movies were rated between 4.0 and 8.0 and the majority of them have profit between 0 and 500.000. The only outlier seen in this visualization is Avatar, which had profit over 2 million dollars. 

####Each point is represents a movie that shows the genre that the movie is qualified and the size represent how much profit the movie made.
"""

alt.Chart(movies).mark_point().encode(

    y='profit',
    x='vote_average',
    color='genres1',size='profit',shape='genres1',
    tooltip='original_title'
)

"""### The visualizations below are another great way to demonstrate the run time x budget spent on movies and their revenue and is divided by genres """

alt.Chart(movies).mark_circle().encode(

    y='revenue',
    x='timexbudget',
    color='genres1',column='genres1',
    tooltip='original_title'
)

"""###Here is the list of amount by the Production Company:

"""

movies['production_companies1'].value_counts()

"""###And here we are able to see how much the Production Companies Spend (Budget) by how much they earn(Revenue)
####You can navigate on the graph to see the company Revenue and Budget and each point is a Production Company
"""

chart=alt.Chart(movies).mark_point().encode(
x='revenue',
y='budget',
    tooltip='production_companies1')
chart

"""### The visualization below we can see the budget of genres and also comparing the revenue. The movie which costed the most to produce was Pirates of the Caribbean: On Stranger Tides and the movie which had the most revnue was Avatar and costed way less than Pirates of the Caribbean. """

chart=alt.Chart(movies).mark_point().encode(
x='revenue',
y='budget:Q',
    tooltip='original_title',
color='genres1',
shape='genres1')
chart

"""### The box belows tells us how many movies by each genre were made. As we can see, the difference from the third and fourth is quite significant compared to the first and second genre. """

movies['genres1'].value_counts()